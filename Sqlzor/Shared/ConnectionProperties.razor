@using Sqlzor.Api;

@inject IConnectionStringService _connectionStringService;

<OverlayComponent>
    <div class="form-check">
        <input class="form-check-input" type="radio" name="connectionTypeRadio"
                checked="@(connectionType == "connectionName")"
                @onchange="@(e => connectionType = "connectionName")"/>
        <div>
            <label class="form-check-label" for="flexRadioDefault1"><h4>Named Connection</h4></label>

            <select class="form-control" value="@ConnectionName" disabled="@(connectionType != "connectionName")" @onchange="OnConnectionNameChanged">
                <option disabled selected value=""> -- Select a Connection -- </option>
                @if (connectionNames != null)
                {
                    @foreach (var connectionName in connectionNames.OrderBy(item => item))
                    {
                        <option value="@connectionName">@connectionName</option>
                    }
                }
            </select>
        </div>
    </div>


    <div class="form-check">
        <input class="form-check-input" type="radio" name="connectionTypeRadio"
                checked="@(connectionType == "connectionString")"
                @onchange="@(e => connectionType = "connectionString")" />
        <div>
            <label class="form-check-label" for="flexRadioDefault1"><h4>Connection String</h4></label>

            <select class="form-control" value="@DriverName" disabled="@(connectionType != "connectionString")" @onchange="OnDriverNameChanged">
                <option disabled selected value=""> -- Select a Driver -- </option>
                @if (driverNames != null)
                {
                    @foreach (var driverName in driverNames.OrderBy(item => item))
                    {
                        <option value="@driverName">@driverName</option>
                    }
                }
            </select>

            <div class="mb-3">
                <input id="connectionStringText" type="text" class="form-control" disabled="@(connectionType != "connectionString")" placeholder="--- Enter Connection String Here ---">
            </div>
        </div>
        
    </div>

    <button type="button" class="btn btn-primary" @onclick="@HandleClick">Connect</button>
</OverlayComponent>

@code
{
    [Parameter]
    public string ConnectionName { get; set; } = string.Empty;

    [Parameter]
    public EventCallback<string> ConnectionNameChanged { get; set; }

    [Parameter]
    public string DriverName { get; set; }

    [Parameter]
    public EventCallback<string> DriverNameChanged { get; set; }

    private string connectionType = "connectionName";
    private string[] connectionNames;
    private string[] driverNames;

    protected override async Task OnInitializedAsync()
    {
        connectionNames = await _connectionStringService.GetConnectionNames();
    }

    private async Task OnConnectionNameChanged(ChangeEventArgs e)
    {
        await ConnectionNameChanged.InvokeAsync(e.Value as string);
    }

    private async Task OnDriverNameChanged(ChangeEventArgs e)
    {
        await DriverNameChanged.InvokeAsync(e.Value as string);
    }

    private Task HandleClick()
    {
        System.Diagnostics.Debug.WriteLine("Connection Type = " + connectionType);
        return Task.FromResult(0);
    }
}
