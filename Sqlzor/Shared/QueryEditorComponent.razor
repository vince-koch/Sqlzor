@using System.Diagnostics;

<MonacoEditor @ref="_editor" Id="@componentId" 
        ConstructionOptions="CreateEditorConstructionOptions"
        OnDidChangeCursorPosition="HandleDidChangeCursorPosition" 
        OnKeyDown="HandleKeyDown"
        CssClass="monaco" />

@code {
    private string componentId = "queryEditor" + Guid.NewGuid().ToString().Replace("-", string.Empty);
    private MonacoEditor _editor;

    [Parameter]
    public string QueryText { get; set; }

    // required for two way bind of QueryText to work
    [Parameter]
    public EventCallback<string> QueryTextChanged { get; set; }

    [Parameter]
    public EventCallback<Position> OnCursorPositionChanged { get; set; }

    private StandaloneEditorConstructionOptions CreateEditorConstructionOptions(MonacoEditor editor)
    {
        MonacoEditor.SetTheme("vs-dark");

        var options = new StandaloneEditorConstructionOptions
        {
            AutomaticLayout = true,
            Language = "sql",
        };

        return options;
    }

    private async Task HandleDidChangeCursorPosition(CursorPositionChangedEvent eventArgs)
    {
        // todo: figure out a better place for the next 2 lines
        var queryText = await _editor.GetValue();
        await QueryTextChanged.InvokeAsync(queryText);

        await OnCursorPositionChanged.InvokeAsync(eventArgs.Position);
    }

    private void HandleKeyDown(KeyboardEvent e)
    {
        //Debug.WriteLine($"{e.KeyCode}");
    }
}
