@using System.Data

@if (Table != null)
{
    if (IsCollapsible)
    {
        <h5 class="alert alert-dark">
            <a href="#" class="text-dark" @onclick="HandleToggleCollapse" @onclick:preventDefault>
                <span class=@(isCollapsed ? "fas fa-chevron-right" : "fas fa-chevron-down") aria-hidden="true"></span> @(Table.TableName ?? "(Unnamed Table)")
            </a>
        </h5>
    }
    else
    {
        <h5 class="alert alert-dark">@(Table.TableName ?? "(Unnamed Table)")</h5>
    }

    @if (!isCollapsed)
    {
        <table class="table table-sm table-light table-striped" style="font-size: x-small">
            <thead>
                <tr>
                    @foreach (var column in Table.Columns.Cast<DataColumn>())
                    {
                        <th>@column.ColumnName</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (var row in Table.Rows.Cast<DataRow>())
                {
                    <tr>
                        @foreach (var item in row.ItemArray)
                        {
                            <td>@item</td>
                        }
                    </tr>
                }
            </tbody>
        </table>
    }
}

@code
{
    private string accordionItemId = "accordionItem-" + Guid.NewGuid().ToString();
    private bool isInitiallyCollapsed = false;
    private bool isCollapsed = false;

    [Parameter]
    public DataTable Table { get; set; } = null;

    [Parameter]
    public bool IsCollapsible { get; set; } = false;

    [Parameter]
    public bool IsInitiallyCollapsed
    {
        get
        {
            return isInitiallyCollapsed;
        }

        set
        {
            isCollapsed = value;
            isInitiallyCollapsed = value;
        }
    }

    private void HandleToggleCollapse()
    {
        isCollapsed = !isCollapsed;
    }
}
